#
# Root CA configuration file
#
# Server's listening port (default: 7054)
port: 7054

# Enables debug logging (default: false)
debug: true

#############################################################################
#  TLS section for the server's listening port
#
#  The following types are supported for client authentication: NoClientCert,
#  RequestClientCert, RequireAnyClientCert, VerifyClientCertIfGiven,
#  and RequireAndVerifyClientCert.
#
#  Certfiles is a list of root certificate authorities that the server uses
#  when verifying client certificates.
#############################################################################
tls:
  # Enable TLS (default: false)
  enabled: false
  # TLS for the server's listening port
  certfile: ca-root-cert.pem
  keyfile: ca-root-key.pem
  clientauth:
    type: noclientcert
    certfiles:

#############################################################################
#  The CA section contains information related to the Certificate Authority
#  including the name of the CA, which should be unique for all members
#  of a blockchain network.  It also includes the key and certificate files
#  used when issuing enrollment certificates (ECerts) and transaction
#  certificates (TCerts).
#  The chainfile (if it exists) contains the certificate chain which
#  should be trusted for this CA, where the 1st in the chain is always the
#  root CA certificate.
#############################################################################
ca:
  # Name of this CA
  name: TheFundsChain Root CA Authority
  # Key file (default: ca-key.pem)
  keyfile: ca-root-key.pem
  # Certificate file (default: ca-cert.pem)
  certfile: ca-root-cert.pem
  # Chain file (default: chain-cert.pem)
  chainfile: ca-root-chain.pem

  #############################################################################
#
# Affiliations: tree for Fully Qualified Domain Name
#
 affiliations:
# Root authority and platform caretaker
   thefundschain:
# Technical domain
      - dltshift:
        - paasops
        - cccertification
# main jurisdiction : regulators' domain
        - eu:
            - fr:
                - amf
            - be:
                - fsma
            -lux:
                    - cssf
            - de:
                - bafin
            - irl:
                - cbi
        - uk:
            - fsa
        - us:
            - sipc
#############################################################################
#
# Registrar of root-level CA identities
#
 registry:
  maxenrollments: -1
  identities:
# Bootstrap caretaker identity
     - name: caretaker
       pass: caretaker001
       type: user
       affiliation: "thefundschain"
       maxenrollments: -1
       attrs:
# Allows enrollment of the following identity types
          hf.Registrar.Roles: "user,client,admin,peer,validator,investor,auditor,caretaker,jurisdictionOwner,organizationOwner,investorOwner"
# Allows delegation of the following identity types to intermediate CA
          hf.Registrar.DelegateRoles: "user,client,admin,peer,validator,investor,auditor,investor,organizationOwner,investorOwner"
# Allows certificate revokation
          hf.Revoker: true
# Allows enrollment of intermediate CA
          hf.IntermediateCA: true
# Bootstrap amf identity
     - name: amf
       pass: amf001
       type: jurisdictionOwner
       affiliation: "thefundschain.fr"
       maxenrollments: -1
       attrs:
# Allows enrollment of the following identity types
          hf.Registrar.Roles: "user,client,admin,peer,validator,investor,auditor,organizationOwner,investorOwner"
# Allows delegation of the following identity types to intermediate CA
          hf.Registrar.DelegateRoles: "user,client,admin,peer,validator,investor,auditor,investor,organizationOwner,investorOwner"
# Allows certificate revokation
          hf.Revoker: true
# Allows enrollment of intermediate CA
          hf.IntermediateCA: true
# Bootstrap caceis identity
     - name: caceis
       pass: caceis001
       type: organizationOwner
       affiliation: "thefundschain.fr.caceis"
       maxenrollments: -1
       attrs:
# Allows enrollment of the following identity types
          hf.Registrar.Roles: "user,client,peer,validator"
# Allows delegation of the following identity types to intermediate CA
          hf.Registrar.DelegateRoles: ""
# Allows certificate revokation
          hf.Revoker: true
# Allows enrollment of intermediate CA
          hf.IntermediateCA: false
###########################################################################
#  Certificate Signing Request (CSR) section.
#  This controls the creation of the root CA certificate.
#  The expiration for the root CA certificate is configured with the
#  "ca.expiry" field below, whose default value is "131400h" which is
#  15 years in hours.
#  The pathlength field is used to limit CA certificate hierarchy as described
#  in section 4.2.1.9 of RFC 5280.
#  Examples:
#  1) No pathlength value means no limit is requested.
#  2) pathlength == 1 means a limit of 1 is requested which is the default for
#     a root CA.  This means the root CA can issue intermediate CA certificates,
#     but these intermediate CAs may not in turn issue other CA certificates
#     though they can still issue end entity certificates.
#  3) pathlength == 0 means a limit of 0 is requested;
#     this is the default for an intermediate CA, which means it can not issue
#     CA certificates though it can still issue end entity certificates.
# X509 attributes
# CN: CommonName
# OU: OrganizationalUnit
# O: Organization
# L: Locality
# S: StateOrProvinceName
# C: CountryName
#
# When entering the DN, escape reserved special characters with a backslash (\). Special characters include:
#    Semicolons (;)
#    Quotes (")
#    Backslashes (\)
#    Plus character (+)
#    Greater than character (>)
#    Less than character (<)
#
###########################################################################
csr:
   cn: "TheFundsChain CA root authority"
# Information to be filled in by certificate requester
   names:
# Country Code
      - C:
# State
        ST:
# Locality
        L:
# Organization
        O:
# Organization Unit
        OU:
   hosts:
     - rootcaauth.thefundschain.com>
     - localhost
   ca:
# Certification lifetime in hours
      expiry: 131400h
      pathlength: 1

#############################################################################
# BCCSP (BlockChain Crypto Service Provider) section is used to select which
# crypto library implementation to use
#############################################################################
bccsp:
    default: SW
    sw:
        hash: SHA2
        security: 256
        filekeystore:
            # The directory used for the software file-based keystore
            keystore: msp/keystore

#############################################################################
# Multi CA section
#
# Each Fabric CA server contains one CA by default.  This section is used
# to configure multiple CAs in a single server.
#
# 1) --cacount <number-of-CAs>
# Automatically generate <number-of-CAs> non-default CAs.  The names of these
# additional CAs are "ca1", "ca2", ... "caN", where "N" is <number-of-CAs>
# This is particularly useful in a development environment to quickly set up
# multiple CAs.
#
# 2) --cafiles <CA-config-files>
# For each CA config file in the list, generate a separate signing CA.  Each CA
# config file in this list MAY contain all of the same elements as are found in
# the server config file except port, debug, and tls sections.
#
# Examples:
# fabric-ca-server start -b admin:adminpw --cacount 2
#
# fabric-ca-server start -b admin:adminpw --cafiles ca/ca1/fabric-ca-server-config.yaml
# --cafiles ca/ca2/fabric-ca-server-config.yaml
#
#############################################################################

cacount:

cafiles:


#############################################################################
#  Signing section
#
#  The "default" subsection is used to sign enrollment certificates;
#  the default expiration ("expiry" field) is "8760h", which is 1 year in hours.
#
#  The "ca" profile subsection is used to sign intermediate CA certificates;
#  the default expiration ("expiry" field) is "43800h" which is 5 years in hours.
#  Note that "isca" is true, meaning that it issues a CA certificate.
#  A maxpathlen of 0 means that the intermediate CA cannot issue other
#  intermediate CA certificates, though it can still issue end entity certificates.
#  (See RFC 5280, section 4.2.1.9)
#############################################################################
signing:
    default:
      usage:
        - cert sign
      expiry: 8760h
    profiles:
      ca:
         usage:
           - cert sign
         expiry: 43800h
         caconstraint:
           isca: true
           maxpathlen: 2